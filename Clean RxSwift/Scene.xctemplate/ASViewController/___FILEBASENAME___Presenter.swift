//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import RxSwift

protocol ___FILEBASENAMEASIDENTIFIER___PresenterInput
{
    var <#UseCase1#>Subject:PublishSubject<___FILEBASENAMEASIDENTIFIER___.<#UseCase1#>.Response> { get }
    var <#UseCase2#>Subject:PublishSubject<___FILEBASENAMEASIDENTIFIER___.<#UseCase2#>.Response> { get }
}

protocol ___FILEBASENAMEASIDENTIFIER___PresenterOutput
{
    var <#UseCase1#>Subject:PublishSubject<___FILEBASENAMEASIDENTIFIER___.<#UseCase1#>.ViewModel> { get }
    var <#UseCase2#>Subject:PublishSubject<___FILEBASENAMEASIDENTIFIER___.<#UseCase2#>.ViewModel> { get }
}

class ___FILEBASENAMEASIDENTIFIER___Presenter: ___FILEBASENAMEASIDENTIFIER___PresenterOutput
{
    var input:___FILEBASENAMEASIDENTIFIER___PresenterInput! {
        didSet {
            input.<#UseCase1#>Subject.map(handle).bindTo(<#UseCase1#>Subject).addDisposableTo(bag)
            input.<#UseCase2#>Subject.map(handle).bindTo(<#UseCase2#>Subject).addDisposableTo(bag)
        }
    }
    
    var <#UseCase1#>Subject = PublishSubject<___FILEBASENAMEASIDENTIFIER___.<#UseCase1#>.Response>()
    var <#UseCase2#>Subject = PublishSubject<___FILEBASENAMEASIDENTIFIER___.<#UseCase2#>.Response>()
    
    let bag = DisposeBag()
    
    // MARK: - Presentation logic
    
    func handle(_ request: ___FILEBASENAMEASIDENTIFIER___.<#UseCase1#>.Response) -> ___FILEBASENAMEASIDENTIFIER___.<#UseCase1#>.ViewModel
    {
    //Let the worker do some work and return the results
    }
    
    func handle(_ request: ___FILEBASENAMEASIDENTIFIER___.<#UseCase2#>.Response) -> ___FILEBASENAMEASIDENTIFIER___.<#UseCase2#>.ViewModel
    {
    //Let the worker do some work and return the results
    }
}
