//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import RxSwift

protocol ___FILEBASENAMEASIDENTIFIER___InteractorInput
{
    var forwardStream: Observable<___FILEBASENAMEASIDENTIFIER___.Request>! { get }
}

protocol ___FILEBASENAMEASIDENTIFIER___InteractorOutput
{
    var forwardStream: Observable<___FILEBASENAMEASIDENTIFIER___.Response>! { get set }
}

class ___FILEBASENAMEASIDENTIFIER___Interactor: ___FILEBASENAMEASIDENTIFIER___InteractorOutput
{
    var input:  ___FILEBASENAMEASIDENTIFIER___InteractorInput! {
        didSet {
            self.forwardStream = input.forwardStream.asObservable().flatMap(request)
        }
    }
    
    var forwardStream: Observable<___FILEBASENAMEASIDENTIFIER___.Response>!
    var worker: ___FILEBASENAMEASIDENTIFIER___Worker = ___FILEBASENAMEASIDENTIFIER___Worker()
    
    // MARK: - Business logic
    
    func request(_ request: ___FILEBASENAMEASIDENTIFIER___.Request) -> Observable<___FILEBASENAMEASIDENTIFIER___.Response>
    {
        let response = ___FILEBASENAMEASIDENTIFIER___.Response()
        return Observable.just(response)
    }
}
